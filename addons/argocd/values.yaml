argo-cd:
  global:
    networkPolicy:
      create: true

  controller:
    args:
      # -- define the application controller `--status-processors`
      statusProcessors: "20"
      # -- define the application controller `--operation-processors`
      operationProcessors: "10"
      # -- define the application controller `--app-hard-resync`
      appHardResyncPeriod: "0"
      # -- define the application controller `--app-resync`
      appResyncPeriod: "20"
      # -- define the application controller `--self-heal-timeout-seconds`
      selfHealTimeout: "5"
      # -- define the application controller `--repo-server-timeout-seconds`
      repoServerTimeoutSeconds: "60"

  configs:
    cm:
      url: "https://argo.alleaffengaffen.ch"
      server.rbac.log.enforce.enable: "true"
      exec.enabled: "true"
      admin.enabled: "true"
      dex.config: |
        connectors:
          - type: github
            id: github
            name: GitHub
            config:
              clientID: 26be52c1bdb04a4d6e1f
              clientSecret: $github:clientSecret # references the sealed secret in the templates folder
              orgs:
              - name: alleaffengaffen
    rbac:
      policy.csv: |
        # Grant all members of 'alleaffengaffen:orangutans' admins
        g, alleaffengaffen:orangutans, role:admin
      policy.default: role:readonly

  server:
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-staging
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      ingressClassName: "nginx"
      hosts:
      - argo.alleaffengaffen.ch
      tls:
      - secretName: argocd-secret
        hosts:
        - argo.alleaffengaffen.ch
      https: true # TLS termination should happen on argocd-server (grpc)


