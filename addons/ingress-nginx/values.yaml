ingress-nginx:

## nginx configuration
## Ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/index.md
##

  controller:
    # Will add custom configuration options to Nginx https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/
    config: {}

    # Will add custom headers before sending traffic to backends according to https://github.com/kubernetes/ingress-nginx/tree/main/docs/examples/customization/custom-headers
    proxySetHeaders: {}

    # Will add custom headers before sending response traffic to the client according to: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#add-headers
    addHeaders: {}

    # This section refers to the creation of the IngressClass resource
    # IngressClass resources are supported since k8s >= 1.18 and required since k8s >= 1.19
    ingressClassResource:
      name: nginx
      enabled: true
      default: true
      controllerValue: "k8s.io/ingress-nginx"

    ## DaemonSet or Deployment
    ##
    kind: DaemonSet

    # The update strategy to apply to the Deployment or DaemonSet
    ##
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate

    # minReadySeconds to avoid killing pods before we are ready
    ##
    minReadySeconds: 5

    service:
      annotations:
        load-balancer.hetzner.cloud/location: hel1

## Default 404 backend
##
  defaultBackend:
    ##
    enabled: true
    replicaCount: 2

    resources:
      limits:
        cpu: 100m
        memory: 200Mi
      requests:
        cpu: 10m
        memory: 20Mi

# A base64ed Diffie-Hellman parameter
# This can be generated with: openssl dhparam 4096 2> /dev/null | base64
# Ref: https://github.com/kubernetes/ingress-nginx/tree/main/docs/examples/customization/ssl-dh-param
  dhParam: LS0tLS1CRUdJTiBESCBQQVJBTUVURVJTLS0tLS0KTUlJQ0NBS0NBZ0VBaHNtRjdjMkppaHd4Zll4R3R1a1cweml1NlcvNndiaXQ4U1NXcXJ2cndDb0Y0WHRwYzQrZgpidEd0ZDZkb1dpdE9nUnFLNkVXcDdwZFMyb085OUN6Q2JHdnFBTktWR1pYSzVlTnM3K1l1K2lnaHBvT1hHZldvCjlhVGFkVjFWSE9zWEdNT3VBU0kzRXJYcW9OYUtTWkRwZUo1Tk9FK0NUa0RDVmJmQWNEZTV4dTlWbUJZZWZTcisKYjdwL0cwQ21aZFRWWmg4S29jRGJxSHJFaHVKYThHTUYwbFVnU1RkaVhUMklzTk1JNE93bzBkUmtvTXNuQitOTgpQVjFxUS9LbGlOSUR5eFNYcEw4eDRDQTZMR2xKSzd3cDd0NnFBb1NleXVBTWlIdFNCMHFZNEZQTFRIYTdqRFZnCkxiR2w2bTU3U2xpT1hJUXdpMGZnUDZjQWpZQ3l5YnJZUGdhWTl3TzVSRHM5ZzhMM0dNMkZjS0R4OHBYb3dmakwKOElJYk41SmFKdnFoSEpGKzNObW5CNnh5ZTVNV01QOVJmckU4UFpJVklQZWc5a0p2Z0hiYU5tR0JGSCtacjdSRAp3SGhEK1p6bENYYisxK2tKNSt4UFVqZHBucmllODN3RWV0RUV6OXNqRHc4L3BrVk5MNFpmM21qcXlKQjA0L0RYCkxzUFJaZWN6NWtoRmFlRWhKMzVuclJVdmp1ZjRrQUg3MUNPa0pMeUR6c1ZzY3dZSFpTalpuQWwzU0tkdkNwa3EKMWNHOWpxZVEzcHAwekdBOXRhYXVTaTQrM3U0ZVgyWGpHS3BRVjVUUjBILzZpVEdTd3lQV1REN1dNYTYvVm9rbgpPeWJPd1p2NmlGeFFTbzBOVDZCWXpEckJlYWgwajNoanN0WVdpd1dMN21CTWRXSjEwU3RnMDFjQ0FRST0KLS0tLS1FTkQgREggUEFSQU1FVEVSUy0tLS0tCg==
